{"remainingRequest":"C:\\Users\\abcd\\Desktop\\durian-h5\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\abcd\\Desktop\\durian-h5\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\abcd\\Desktop\\durian-h5\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\abcd\\Desktop\\durian-h5\\src\\views\\Home.vue?vue&type=template&id=fae5bece&","dependencies":[{"path":"C:\\Users\\abcd\\Desktop\\durian-h5\\src\\views\\Home.vue","mtime":1596186892728},{"path":"C:\\Users\\abcd\\Desktop\\durian-h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\abcd\\Desktop\\durian-h5\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\abcd\\Desktop\\durian-h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\abcd\\Desktop\\durian-h5\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}IHsgc3RhdGljQ2xhc3M6ICJidG4tam9pbiIgfSkKICAgICAgXQogICAgKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInBpYyIgfSwgWwogICAgICBfYygiaW1nIiwgeyBhdHRyczogeyBzcmM6IHJlcXVpcmUoIkAvYXNzZXRzL3NoYXJlLnBuZyIpIH0gfSkKICAgIF0pCiAgfQpdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}